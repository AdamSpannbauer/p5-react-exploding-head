{"version":3,"sources":["SketchBase.js","ExplodingHeadSketch.js","ExplodingHeadComponent.js","App.js","reportWebVitals.js","index.js"],"names":["SketchBase","props","Sketch","p","Error","myRef","React","createRef","this","myP5","p5","current","ref","Component","ExplodingHeadSketch","setup","createCanvas","windowWidth","windowHeight","draw","background","sin","frameCount","fill","cos","noStroke","arc","min","width","height","HALF_PI","max","ellipse","windowResized","resizeCanvas","ExplodingHeadComponent","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,OAAS,SAACC,GACR,MAAM,IAAIC,MAAJ,mbAJJ,EAAKC,MAAQC,IAAMC,YAFJ,E,gEA2BjBC,KAAKC,KAAO,IAAIC,IAAGF,KAAKN,OAAQM,KAAKH,MAAMM,W,+BAI3C,OACE,qBAAKC,IAAKJ,KAAKH,Y,GAjCmBC,IAAMO,WCoC/BC,EAnCa,SAACX,GAEzBA,EAAEY,MAAQ,WACNZ,EAAEa,aAAab,EAAEc,YAAad,EAAEe,eAGpCf,EAAEgB,KAAO,WACLhB,EAAEiB,WAAyC,IAA9BjB,EAAEkB,IAAmB,KAAflB,EAAEmB,aAErBnB,EAAEoB,KAAmC,IAA9BpB,EAAEqB,IAAmB,KAAfrB,EAAEmB,aACfnB,EAAEsB,WAKFtB,EAAEuB,IAAIvB,EAAEwB,IAAI,CAACxB,EAAEyB,MAAQ,EAAG,MAAOzB,EAAE0B,OAAS,EAAG,IAAK,IAAK1B,EAAE2B,SAAU3B,EAAE2B,SACvE3B,EAAEuB,IAAIvB,EAAE4B,IAAI,CAAC5B,EAAEyB,MAAQ,EAAGzB,EAAEyB,MAAQ,MAAOzB,EAAE0B,OAAS,EAAG,IAAK,KAAM1B,EAAE2B,QAAS3B,EAAE2B,SAEjF3B,EAAEuB,IAAIvB,EAAEwB,IAAI,CAACxB,EAAEyB,MAAQ,EAAG,MAAOzB,EAAE0B,OAAS,EAAG,GAAI,GAAI1B,EAAE2B,SAAU3B,EAAE2B,SACrE3B,EAAEuB,IAAIvB,EAAE4B,IAAI,CAAC5B,EAAEyB,MAAQ,EAAGzB,EAAEyB,MAAQ,MAAOzB,EAAE0B,OAAS,EAAG,GAAI,IAAK1B,EAAE2B,QAAS3B,EAAE2B,SAE/E3B,EAAEuB,IAAIvB,EAAEwB,IAAI,CAACxB,EAAEyB,MAAQ,EAAG,MAAOzB,EAAE0B,OAAS,EAAG,GAAI,GAAI1B,EAAE2B,SAAU3B,EAAE2B,SACrE3B,EAAEuB,IAAIvB,EAAE4B,IAAI,CAAC5B,EAAEyB,MAAQ,EAAGzB,EAAEyB,MAAQ,MAAOzB,EAAE0B,OAAS,EAAG,GAAI,IAAK1B,EAAE2B,QAAS3B,EAAE2B,SAE/E3B,EAAEuB,IAAIvB,EAAEwB,IAAI,CAACxB,EAAEyB,MAAQ,EAAG,MAAOzB,EAAE0B,OAAS,EAAG,GAAI,GAAI1B,EAAE2B,SAAU3B,EAAE2B,SACrE3B,EAAEuB,IAAIvB,EAAE4B,IAAI,CAAC5B,EAAEyB,MAAQ,EAAGzB,EAAEyB,MAAQ,MAAOzB,EAAE0B,OAAS,EAAG,GAAI,IAAK1B,EAAE2B,QAAS3B,EAAE2B,SAE/E3B,EAAE6B,QAAQ7B,EAAEyB,MAAQ,EAAGzB,EAAE0B,OAAS,EAAG,EAAG,IAG5C1B,EAAE8B,cAAgB,WACd9B,EAAE+B,aAAa/B,EAAEc,YAAad,EAAEe,gBChCnBiB,E,4MACjBjC,OAASY,E,YADuCd,GCSrCoC,MARf,WACE,OACE,qBAAKC,UAAU,aAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95ce2f75.chunk.js","sourcesContent":["import React from 'react';\nimport p5 from 'p5';\n\nexport default class SketchBase extends React.Component {\n  constructor(props) {\n      super(props);\n      this.myRef = React.createRef();\n  }\n\n  Sketch = (p) => {\n    throw new Error(\n      `NotImplementedError: must define Sketch method with a setup & draw\n        \n        Example: \n\n        export default class MySketch extends Sketch {\n          Sketch = (p) => {\n            p.sketch = () => {\n              p.createCanvas(512, 512);\n            }\n  \n            p.draw = () => {\n              p.background(20);\n              p.ellipse(width / 2, height / 2, 100);\n            }\n          }\n        }`\n      )\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n\n  render() {\n    return (\n      <div ref={this.myRef}>\n\n      </div>\n    )\n  }\n}\n","// import ExplodingHead from './ExplodingHead'\n\n// TODO: implement ExplodingHead class to do something cool\n\nconst ExplodingHeadSketch = (p) => {\n\n    p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n    }\n    \n    p.draw = () => {\n        p.background(p.sin(p.frameCount * 0.001) * 255);\n        \n        p.fill(p.cos(p.frameCount * 0.001) * 255);\n        p.noStroke();\n        \n        // TODO: this is hot garbage code. write some way to generate these auto\n        //       * A function with an image that gets split in 2? needs radius and x-width-offset\n        //       * Maybe a function that accepts an array of images, and spacing or sumn\n        p.arc(p.min([p.width / 2, 100]), p.height / 2, 100, 100, p.HALF_PI, -p.HALF_PI)\n        p.arc(p.max([p.width / 2, p.width - 100]), p.height / 2, 100, 100, -p.HALF_PI, p.HALF_PI)\n\n        p.arc(p.min([p.width / 2, 150]), p.height / 2, 75, 75, p.HALF_PI, -p.HALF_PI)\n        p.arc(p.max([p.width / 2, p.width - 150]), p.height / 2, 75, 75, -p.HALF_PI, p.HALF_PI)\n\n        p.arc(p.min([p.width / 2, 200]), p.height / 2, 50, 50, p.HALF_PI, -p.HALF_PI)\n        p.arc(p.max([p.width / 2, p.width - 200]), p.height / 2, 50, 50, -p.HALF_PI, p.HALF_PI)\n\n        p.arc(p.min([p.width / 2, 250]), p.height / 2, 25, 25, p.HALF_PI, -p.HALF_PI)\n        p.arc(p.max([p.width / 2, p.width - 250]), p.height / 2, 25, 25, -p.HALF_PI, p.HALF_PI)\n\n        p.ellipse(p.width / 2, p.height / 2, 5, 5)\n    }\n\n    p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n    }\n}\n\nexport default ExplodingHeadSketch;\n","import SketchBase from './SketchBase'\nimport ExplodingHeadSketch from './ExplodingHeadSketch'\n\nexport default class ExplodingHeadComponent extends SketchBase {\n    Sketch = ExplodingHeadSketch;\n}\n","import './App.css';\nimport ExplodingHeadComponent from './ExplodingHeadComponent';\n\n\nfunction App() {\n  return (\n    <div className='background'>\n      <ExplodingHeadComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}